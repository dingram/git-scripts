#!/bin/bash
#
# Copyright (c) 2013-2014 David Ingram
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

REMOTECOL=red
LOCALCOL=yellow
DEFAULTCOL=$LOCALCOL

BPREFIX=refs/heads/
MODE=1
if [ "$1" == "-r" ]; then
	BPREFIX=refs/remotes/
	DEFAULTCOL=$REMOTECOL
elif [ "$1" == "-a" ]; then
	BPREFIX=
	MODE=2
fi
BRANCH_OUTPUT="$( git branch "$@" | grep -v -- '->' | cut -c3- )"
if [ $MODE -eq 2 ]; then
	BRANCH_OUTPUT="$( echo "$BRANCH_OUTPUT" | sed -e 's!^!refs/heads/!; s!^refs/heads/remotes/!refs/remotes/!' )"
fi
SORTED_BRANCHES="$(echo "$BRANCH_OUTPUT" | while read BRANCH; do git --no-pager log --pretty=tformat:"%ci ${BRANCH}" -n1 ${BPREFIX}${BRANCH}; done | sort -r | cut -d' ' -f4)"
if [ $MODE -eq 2 ]; then
	SORTED_BRANCHES="$( echo "$SORTED_BRANCHES" | sed -re 's!^refs/heads/!-!; s!^refs/remotes/!#!' )"
fi
MAX_BRANCH_LEN="$(echo "$SORTED_BRANCHES" | awk '{if (length > L) {L=length}} END {print L}')"
if [ $MODE -eq 2 ]; then
	MAX_BRANCH_LEN=$(( ${MAX_BRANCH_LEN} - 1 ))
fi

BRCOL=$DEFAULTCOL
echo "$SORTED_BRANCHES" | while read BRANCH; do
	if [ $MODE -eq 2 ]; then
		BRTYPE=$( echo $BRANCH | cut -c1 )
		BRANCH=$( echo $BRANCH | cut -c2- )
		if [ "$BRTYPE" == "-" ]; then
			BRCOL=$LOCALCOL
		elif [ "$BRTYPE" == "#" ]; then
			BRCOL=$REMOTECOL
		fi
	fi
  BRNAME="$(printf "%-${MAX_BRANCH_LEN}s" $BRANCH)"
  git --no-pager log --pretty=tformat:"%C($BRCOL)$BRNAME%Creset - %C(blue)%h%Creset %s %C(green)(%cr)%Creset %Cred<%an>%Creset" --abbrev-commit --date=relative -n1 ${BPREFIX}${BRANCH}
done
